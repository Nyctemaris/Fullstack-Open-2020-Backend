{"version":3,"sources":["components/NewPersonForm.js","components/FilterForm.js","components/Persons.js","Services/dataService.js","components/Notification.js","App.js","index.js"],"names":["NewPersonForm","addPerson","newName","handleNameFieldChange","newNumber","handleNumberFieldChange","onSubmit","value","onChange","type","FilterForm","nameFilter","handleNameFilterChange","Persons","persons","handleRemovePerson","styling","display","marginRight","filter","person","name","toLowerCase","includes","map","key","id","style","number","onClick","baseURL","fetchAllData","a","request","axios","get","response","data","addNewPerson","newPersonData","post","updateNumber","put","deletePerson","personId","delete","Notification","notificationmessage","notificationType","className","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notification","setNotification","setNotificationType","useEffect","dataService","then","responseData","handleNumberUpdate","duplicatePerson","setTimeout","catch","e","event","target","preventDefault","find","window","confirm","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1472dc9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewPersonForm = ({\r\n    addPerson,\r\n    newName,\r\n    handleNameFieldChange,\r\n    newNumber,\r\n    handleNumberFieldChange,\r\n}) => (\r\n        <div>\r\n            <h2> Add new person </h2>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameFieldChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberFieldChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\nexport default NewPersonForm;","import React from 'react';\r\n\r\nconst FilterForm = ({\r\n    nameFilter, \r\n    handleNameFilterChange\r\n}) => (\r\n    <div>\r\n        Filter with: <input value={nameFilter} onChange={handleNameFilterChange} />\r\n    </div>\r\n);\r\nexport default FilterForm;","import React from 'react';\r\n\r\nconst Persons = ({\r\n    persons,\r\n    nameFilter,\r\n    handleRemovePerson,\r\n}) => {\r\n    const styling = {\r\n        display: 'inline-block',\r\n        marginRight: '8px'\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            {persons.filter(person =>\r\n                person.name.toLowerCase().includes(nameFilter.toLowerCase()))\r\n                .map((person) => (<div key={person.id}>\r\n                    <p style={styling}>{person.name} {person.number}</p>\r\n                    <button onClick={() => handleRemovePerson(person)}>delete</button>\r\n                </div>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Persons;","import axios from 'axios'\r\nconst baseURL = 'https://full-stack-open-2020.herokuapp.com/api/persons'\r\n\r\nconst fetchAllData = async () => {\r\n    const request = axios.get(baseURL)\r\n    const response = await request\r\n    return response.data\r\n}\r\n\r\nconst addNewPerson = async (newPersonData) => {\r\n    const request = axios.post(baseURL, newPersonData)\r\n    const response = await request\r\n    return response.data\r\n}\r\n\r\nconst updateNumber = async (id, newPersonData) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newPersonData)\r\n    const response = await request\r\n    return response.data\r\n}\r\nconst deletePerson = async (personId) => {\r\n    const request = axios.delete(`${baseURL}/${personId}`)\r\n    const response = await request\r\n    return response.data\r\n}\r\nexport default {fetchAllData, addNewPerson, updateNumber, deletePerson}","import React from 'react'\r\n\r\nconst Notification = ({notificationmessage, notificationType}) => {\r\n\r\n    return (\r\n        <div className={notificationType}>\r\n            {notificationmessage}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport NewPersonForm from './components/NewPersonForm.js'\nimport FilterForm from './components/FilterForm'\nimport Persons from './components/Persons'\nimport dataService from './Services/dataService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [notificationType, setNotificationType] = useState(null)\n\n  useEffect(() => {\n    dataService\n      .fetchAllData()\n      .then(responseData => {\n        setPersons(responseData)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPersonData = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const duplicatePerson = (persons.find(person => person.name === newName));\n    if (duplicatePerson) {\n      if (window.confirm(`${duplicatePerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n\n        handleNumberUpdate(newPersonData, duplicatePerson)\n        return;\n\n      } else {\n        setNewName('')\n        setNewNumber('')\n        return;\n      }\n    }\n\n\n    dataService\n      .addNewPerson(newPersonData)\n      .then(responseData => {\n        setPersons(persons.concat(responseData))\n        setNewName('')\n        setNewNumber('')\n        setNotificationType('successNotification')\n        setNotification(`User ${newPersonData.name} has been added to the phonebook`)\n        setTimeout(() => {\n          setNotification(null)\n          setNotificationType(null)\n        }, 5000)\n      })\n  }\n\n  const handleNameFieldChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberFieldChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const handleRemovePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      dataService\n        .deletePerson(person.id)\n        .then(() => {\n          dataService\n            .fetchAllData()\n            .then(responseData => {\n              setPersons(responseData)\n            })\n        })\n    }\n  }\n\n  const handleNumberUpdate = (newPersonData, duplicatePerson) => {\n    dataService\n      .updateNumber(duplicatePerson.id, newPersonData)\n      .then(() => {\n        dataService\n          .fetchAllData()\n          .then(responseData => {\n            setPersons(responseData)\n            setNewName('')\n            setNewNumber('')\n            setNotificationType('successNotification')\n            setNotification(`User ${newPersonData.name} phonenumber has been updated`)\n            setTimeout(() => {\n              setNotification(null)\n              setNotificationType(null)\n            }, 5000)\n\n          })\n      }).catch(e => {\n        setNotificationType('failureNotification')\n        setNotification(`updating user ${newPersonData.name} phonenumber has failed, please try again`)\n        setTimeout(() => {\n          setNotificationType(null)\n          setNotification(null)\n          dataService\n            .fetchAllData()\n            .then(responseData => {\n              setPersons(responseData)\n            })\n        }, 5000)\n      })\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationmessage={notification} notificationType={notificationType} />\n      <FilterForm nameFilter={nameFilter} handleNameFilterChange={handleNameFilterChange} />\n      <NewPersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameFieldChange={handleNameFieldChange}\n        newNumber={newNumber}\n        handleNumberFieldChange={handleNumberFieldChange}\n      />\n      <Persons persons={persons} nameFilter={nameFilter} handleRemovePerson={handleRemovePerson} />\n\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}